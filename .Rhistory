1<>0
1!=0
chwd
set wd
setwd specdata
cd spacdata
cdwd specdata
setwd ("specdata")
mediciones <- read.csv("001")
mediciones <- read.csv("001.csv")
mediciones
mediciones.dimname()
dimname(mediciones)
names(mediciones)
mediciones("sulfate")
mediciones["sulfate"]
test = vector()
test2 <- rbind (vector, mediciones["sulfate"])
class(mediciones["sulfate"])
as_number(class(mediciones["sulfate"]))
as_array((class(mediciones["sulfate"])))
array((class(mediciones["sulfate"])))
array((mediciones["sulfate"]))
class(array((mediciones["sulfate"])))
array((mediciones["sulfate"]))
(mediciones["sulfate"])
test2 <- rbind (vector, mediciones["sulfate"])
test2 <- rbind (test, mediciones["sulfate"])
test2
class(test2)
test2[1]
test2[1,]
mediciones["sulfate"]
test2[1]
test2 <- rbind (test, mediciones["sulfate"])
is.na(test2)
!is.na(test2)
test2[!is.na(test2)]
?average
?mean
mean(test2[!is.na(test2)])
a = "gljfg"
b = "jjjjjjj"
a+b
?concatenate
paste (a,b)
paste (a,b, sep = "/")
pwd
getwd
getwd()
directorio <- getwd()
pollutantmean (dirrectorio, "ffff")
setwd ("..")
getwd()
pollutantmean (dirrectorio, "ffff")
pollutantmean
## Return the mean of the pollutant across all monitors list
pollutantmean (dirrectorio, "ffff")
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
if (pollutant != "sulfate" && pollutant != "nitrate" ) {
return "ERROR"
}
todas = vector()
for sensor in id {
sensor = paste (directory,sensor, sep = "/")
mediciones <- read.csv(sensor)
mediciones
todas <- rbind (todas, mediciones[pollutant])
}
los_ok = todas[!is.na(todas)]
media_total = mean(los_ok)
return media_total
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
if (pollutant != "sulfate" && pollutant != "nitrate" ) {
return "ERROR"
}
todas = vector()
for sensor in id {
sensor = paste (directory,sensor, sep = "/")
mediciones <- read.csv(sensor)
mediciones
todas <- rbind (todas, mediciones[pollutant])
}
los_ok = todas[!is.na(todas)]
media_total = mean(los_ok)
return media_total
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
if (pollutant != "sulfate" && pollutant != "nitrate" ) {
return "ERROR"
}
todas = vector()
for sensor in id {
sensor = paste (directory,sensor, sep = "/")
mediciones <- read.csv(sensor)
mediciones
todas <- rbind (todas, mediciones[pollutant])
}
los_ok = todas[!is.na(todas)]
media_total = mean(los_ok)
return media_total
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
if (pollutant != "sulfate" && pollutant != "nitrate" ) {
return "ERROR"
}
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
if (pollutant != "sulfate" && pollutant != "nitrate" ) {
return "ERROR"
}
todas = vector()
for sensor in id {
sensor = paste (directory,sensor, sep = "/")
mediciones <- read.csv(sensor)
mediciones
todas <- rbind (todas, mediciones[pollutant])
}
los_ok = todas[!is.na(todas)]
media_total = mean(los_ok)
return media_total
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
if ((pollutant != "sulfate") && (pollutant != "nitrate" )) {
return "ERROR"
}
priceCalculator <- function(hours, pph=40){
net.price <- hours * pph
if(hours > 100) {
net.price <- net.price * 0.9
}
round(net.price)
}
priceCalculator(23)
?&&
TRUE && FALSE
pollutant <- "sulfate"
(pollutant != "sulfate")
((pollutant != "sulfate") && (pollutant != "nitrate" ))
?if
()
?if()
?if
?
if ((pollutant != "sulfate") && (pollutant != "nitrate" )) {
return "ERROR"
}
?return
print "Error"
print ("Error")
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
if ((pollutant != "sulfate") && (pollutant != "nitrate" )) {
return ("ERROR")
}
todas = vector()
for sensor in id {
}
for (sensor in id) {
sensor = paste (directory,sensor, sep = "/")
mediciones <- read.csv(sensor)
mediciones
todas <- rbind (todas, mediciones[pollutant])
}
los_ok = todas[!is.na(todas)]
media_total = mean(los_ok)
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
if ((pollutant != "sulfate") && (pollutant != "nitrate" )) {
return ("ERROR")
}
todas = vector()
for (sensor in id) {
sensor = paste (directory,sensor, sep = "/")
mediciones <- read.csv(sensor)
mediciones
todas <- rbind (todas, mediciones[pollutant])
}
los_ok = todas[!is.na(todas)]
media_total = mean(los_ok)
}
pollutantmean (directorio, "ffff")
pollutantmean (directorio, "001.csv")
pollutantmean (directorio, "sulfate")
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
if ((pollutant != "sulfate") && (pollutant != "nitrate" )) {
return ("ERROR")
}
todas = vector()
for (sensor in id) {
print (sensor)
sensor = paste (directory,sensor, sep = "/")
mediciones <- read.csv(sensor)
mediciones
todas <- rbind (todas, mediciones[pollutant])
}
los_ok = todas[!is.na(todas)]
media_total = mean(los_ok)
}
pollutantmean (directorio, "sulfate")
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
if ((pollutant != "sulfate") && (pollutant != "nitrate" )) {
return ("ERROR")
}
todas = vector()
print (id[1])
for (sensor in id) {
print (sensor)
sensor = paste (directory,sensor, sep = "/")
mediciones <- read.csv(sensor)
mediciones
todas <- rbind (todas, mediciones[pollutant])
}
los_ok = todas[!is.na(todas)]
media_total = mean(los_ok)
}
pollutantmean (directorio, "sulfate")
a = 1
sprintf("%03i", a)
sprintf("%03i", a)
paste(sprintf("%03i", a), ".csv")
paste(sprintf("%03i", a), "csv", sep = ".")
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
if ((pollutant != "sulfate") && (pollutant != "nitrate" )) {
return ("ERROR")
}
todas = vector()
for (sensor in id) {
sensor_txt = paste(sprintf("%03i", sensor), "csv", sep = ".")
sensor = paste (directory, sensor_txt, sep = "/")
mediciones <- read.csv(sensor)
todas <- rbind (todas, mediciones[pollutant])
}
los_ok = todas[!is.na(todas)]
media_total = mean(los_ok)
}
pollutantmean (directorio, "sulfate")
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
if ((pollutant != "sulfate") && (pollutant != "nitrate" )) {
return ("ERROR")
}
todas = vector()
for (sensor in id) {
sensor_txt = paste(sprintf("%03i", sensor), "csv", sep = ".")
sensor = paste (directory, sensor_txt, sep = "/")
mediciones <- read.csv(sensor)
todas <- rbind (todas, mediciones[pollutant])
}
los_ok = todas[!is.na(todas)]
media_total = mean(los_ok)
return(media_total)
}
pollutantmean (directorio, "sulfate", 1)
pollutantmean (directorio, "sulfate", 1:3)
pollutantmean (directorio, "sulfate")
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean (directorio, "sulfate", 70:72)
pollutantmean (directorio, "nitrate", 70:72)
pollutantmean (directorio, "nitrate", 23)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
test = data.frame()
test
?data.frame
ncolumna = c("id", "nobs")
test = data.frame(row.names = ncolumnas)
test = data.frame(row.names = ncolumna)
test
test
test = data.frame("id", "nobs")
test
names(test)
test = data.frame("id", "nobs")
test = data.frame()
names(test)
names(test)=c("id","nobs")
test = data.frame(2)
names(test)
test
test = data.frame()
test(id=5, nobs = 4)
test[id=5, nobs = 4]
test[id=5 nobs = 4]
df <- data.frame(Date=as.Date(character()),
File=character(),
User=character(),
stringsAsFactors=FALSE)
df
names(df)
test <- data.frame(id=numeric())
test <- data.frame(id=numeric(), nobs=numeric)
test <- data.frame(id=numeric(), nobs=numeric())
test
test[1] = 0,4
test[1]
rbind(test, c(8,9))
test <- data.frame(id=numeric(), nobs=numeric())
rbind(test, c(8,9))
test <- rbind(test, c(8,9))
test
test <- rbind(test, c(8,9))
test
test <- data.frame(id=numeric(), nobs=numeric())
test
test2 = data.frame (id= 89, nobs = 9)
test <- rbind(test, c(8,9))
test
test <- data.frame(id=numeric(), nobs=numeric())
test2 = data.frame (id= 89, nobs = 9)
test <- rbind(test, test2
)
test
complete.cases(test)
test2 = data.frame (id= 19, nobs = NA)
test <- rbind(test, test2)
complete.cases(test)
complete.cases(test[1], test[2])
count(complete.cases(test[1], test[2]))
sum(complete.cases(test[1], test[2]))
test2 = data.frame (id= 19, nobs = 3)
test <- rbind(test, test2)
sum(complete.cases(test[1], test[2]))
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
resumen <- data.frame(id=numeric(), nobs=numeric())
for (sensor in id) {
sensor_txt <- paste(sprintf("%03i", sensor), "csv", sep = ".")
sensor <- paste (directory, sensor_txt, sep = "/")
mediciones <- read.csv(sensor)
buenas <- sum(complete.cases(mediciones))
lineaadd <- data.frame(id=sensor, nobs=buenas)
resumen <- rbind(resumen, lineaadd)
}
return (resumen)
}
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2,4,8,10,12))
submit
